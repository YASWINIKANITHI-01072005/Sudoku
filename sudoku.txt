public class SudokuSolver
{
static boolean solveSudoku(char[][] board)
{
for(int row=0;row<9;row++)
for(int col=0;col<9;col++)
if(board[row][col]=='.')
{
for(char num='1';num<='9';num++)
{
if(isValid(board,row,col,num))
board[row][col]='.'
}
}
return false;
}
return true;
}
static boolean isValid(char[][] board,int row,int col,char num)
{
for(int i=0;i<9;i++)
{
if(board[i][col]==num) return false;
if(board[row][i]==num return false;
if(board[3*(row/3)+i/3][3*(col/3)+i%3]==num)
return false;
}
return true;
}
static void printBoard(char[][] board)
{
for(char[] row:board)
System.out.println(java.util.Arrays.toString(row));
}
public static void main(String[] args)
{
char[][] board={
{'5','3','.','.','7','.','.','.','.'},
{'6','.','.','1','9','5','.','.','.'}
{'.','9','8','.','.','.','.','6','.'}
{'8','.','.','.','6','.','.','.','3'}
{'4','.','.','8','.','3','.','.','1'}
{'7','.','.','.','2','.','.','.','6'}
{'.','6','.','.','.','.','2','8','.'}
{'.','.','.','4','1','.','.','.','5'}
{'.','.','.','.','8','.','.','7','9'}




